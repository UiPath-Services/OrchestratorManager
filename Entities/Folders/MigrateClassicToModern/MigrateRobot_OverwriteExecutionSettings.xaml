<Activity mc:Ignorable="sap sap2010" x:Class="MigrateRobot_OverwriteExecutionSettings" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
    <x:Property Name="in_ClassicFolderRobotID" Type="InArgument(x:Int64)" />
    <x:Property Name="in_RobotCorrespondingUserID" Type="InArgument(x:Int64)" />
    <x:Property Name="in_ClassicFolderID" Type="InArgument(x:Int64)" />
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>1338,4813</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="32">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Overwrite the Robot corresponding User's execution settings." DisplayName="Overwrite User's Robot's Execution Settings" sap:VirtualizedContainerService.HintSize="568,4748" sap2010:WorkflowViewState.IdRef="Sequence_8">
    <Sequence.Variables>
      <Variable x:TypeArguments="njl:JObject" Name="UserCompleteData" />
      <Variable x:TypeArguments="njl:JToken" Name="RobotExecutionSettings" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Get Classic Folder Robot's Execution Settings" sap:VirtualizedContainerService.HintSize="526,379" sap2010:WorkflowViewState.IdRef="Sequence_7">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="GetRobotResult" />
        <Variable x:TypeArguments="njl:JObject" Name="GetRobotResultObject" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke MakeHTTPRequest Workflow (Get Robot)" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="Common\MakeHTTPRequest.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="io_Config">
            <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="in_Config" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Method">
            <Literal x:TypeArguments="x:String">get</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Endpoint">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Format(&quot;{0}/odata/Robots({1})&quot;, in_Config(&quot;OrchestratorURL&quot;), in_ClassicFolderRobotID)" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Body" />
          <InArgument x:TypeArguments="x:Int64" x:Key="in_OUID">
            <mva:VisualBasicValue x:TypeArguments="x:Int64" ExpressionText="in_ClassicFolderID" />
          </InArgument>
          <InArgument x:TypeArguments="x:Int32" x:Key="in_ExpectedStatusCode">
            <Literal x:TypeArguments="x:Int32" Value="200" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_StatusCode" />
          <OutArgument x:TypeArguments="x:String" x:Key="out_Result">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="GetRobotResult" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON (Get Robot)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[GetRobotResultObject]" JsonString="[GetRobotResult]" />
      <Assign DisplayName="Assign RobotExecutionSettings" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="njl:JToken">[RobotExecutionSettings]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="njl:JToken">[GetRobotResultObject("ExecutionSettings")]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <Sequence DisplayName="Get Corresponding User's Complete Data" sap:VirtualizedContainerService.HintSize="526,279" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="GetUserResult" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke MakeHTTPRequest Workflow (Get Robot Corresponding User)" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="Common\MakeHTTPRequest.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="io_Config">
            <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="in_Config" />
          </InOutArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Method">
            <Literal x:TypeArguments="x:String">get</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Endpoint">
            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Format(&quot;{0}/odata/Users({1})?$expand=OrganizationUnits&quot;, in_Config(&quot;OrchestratorURL&quot;), in_RobotCorrespondingUserID)" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_Body" />
          <InArgument x:TypeArguments="x:Int64" x:Key="in_OUID" />
          <InArgument x:TypeArguments="x:Int32" x:Key="in_ExpectedStatusCode">
            <Literal x:TypeArguments="x:Int32" Value="200" />
          </InArgument>
          <OutArgument x:TypeArguments="x:Int32" x:Key="out_StatusCode" />
          <OutArgument x:TypeArguments="x:String" x:Key="out_Result">
            <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="GetUserResult" />
          </OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON (Get User)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_3" JsonObject="[UserCompleteData]" JsonString="[GetUserResult]" />
    </Sequence>
    <Sequence DisplayName="Replace Execution Settings" sap:VirtualizedContainerService.HintSize="526,696" sap2010:WorkflowViewState.IdRef="Sequence_17">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;RobotProvision&quot;).ToString)]" DisplayName="If Attended Robot is Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Replace Attended Robot's Execution Settings)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_1" MethodName="Replace">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JToken">[UserCompleteData("RobotProvision")("ExecutionSettings")]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="njl:JToken">[RobotExecutionSettings]</InArgument>
          </InvokeMethod>
        </If.Then>
      </If>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;UnattendedRobot&quot;).ToString)]" DisplayName="If Unattended Robot is Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Replace Unattended Robot's Execution Settings)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Replace">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JToken">[UserCompleteData("UnattendedRobot")("ExecutionSettings")]</InArgument>
            </InvokeMethod.TargetObject>
            <InArgument x:TypeArguments="njl:JToken">[RobotExecutionSettings]</InArgument>
          </InvokeMethod>
        </If.Then>
      </If>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="Remove fields that are present on the result of GET /odata/User(ID), but that should not be in PUT /odata/User(ID) to avoid unwanted replacement of data, such as passwords.&#xD;&#xA;&#xD;&#xA;Fields are removed to mirror the request made by Orchestrator's web interface when editing a User as of August 2020." DisplayName="Remove Request Body Fields" sap:VirtualizedContainerService.HintSize="526,2967" sap2010:WorkflowViewState.IdRef="Sequence_18">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <InvokeMethod DisplayName="Invoke Method (Remove @odata.context Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("@odata.context")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method (Remove EmailAddress Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("EmailAddress")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method (Remove Password Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("Password")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method (Remove LoginProviders Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("LoginProviders")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method (Remove ProvisionType Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("ProvisionType")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method (Remove Key Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("Key")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <InvokeMethod DisplayName="Invoke Method (Remove TenantKey Field)" sap:VirtualizedContainerService.HintSize="484,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Remove">
        <InvokeMethod.TargetObject>
          <InArgument x:TypeArguments="njl:JProperty">[UserCompleteData.Property("TenantKey")]</InArgument>
        </InvokeMethod.TargetObject>
      </InvokeMethod>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;RobotProvision&quot;).ToString) AndAlso UserCompleteData(&quot;RobotProvision&quot;)(&quot;RobotId&quot;) IsNot Nothing]" DisplayName="If RobotProvision/RobotId Is Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_7">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Remove RobotProvision/RobotId Field)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JContainer">[UserCompleteData("RobotProvision")("RobotId").Parent]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </If.Then>
      </If>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;RobotProvision&quot;).ToString) AndAlso UserCompleteData(&quot;RobotProvision&quot;)(&quot;RobotType&quot;) IsNot Nothing]" DisplayName="If RobotProvision/RobotType Is Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_9">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Remove RobotProvision/RobotType Field)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JContainer">[UserCompleteData("RobotProvision")("RobotType").Parent]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </If.Then>
      </If>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;UnattendedRobot&quot;).ToString) AndAlso UserCompleteData(&quot;UnattendedRobot&quot;)(&quot;Password&quot;) IsNot Nothing]" DisplayName="If UnattendedRobot/Password Is Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_10">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Remove UnattendedRobot/Password Field)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JContainer">[UserCompleteData("UnattendedRobot")("Password").Parent]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </If.Then>
      </If>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;UnattendedRobot&quot;).ToString) AndAlso UserCompleteData(&quot;UnattendedRobot&quot;)(&quot;CredentialExternalName&quot;) IsNot Nothing]" DisplayName="If UnattendedRobot/CredentialExternalName Is Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_11">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Remove UnattendedRobot/CredentialExternalName Field)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JContainer">[UserCompleteData("UnattendedRobot")("CredentialExternalName").Parent]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </If.Then>
      </If>
      <If Condition="[Not String.IsNullOrWhiteSpace(UserCompleteData(&quot;UnattendedRobot&quot;).ToString) AndAlso UserCompleteData(&quot;UnattendedRobot&quot;)(&quot;RobotId&quot;) IsNot Nothing]" DisplayName="If UnattendedRobot/RobotIdIs Specified" sap:VirtualizedContainerService.HintSize="484,282" sap2010:WorkflowViewState.IdRef="If_12">
        <If.Then>
          <InvokeMethod DisplayName="Invoke Method (Remove UnattendedRobot/RobotId Field)" sap:VirtualizedContainerService.HintSize="237,134" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Remove">
            <InvokeMethod.TargetObject>
              <InArgument x:TypeArguments="njl:JContainer">[UserCompleteData("UnattendedRobot")("RobotId").Parent]</InArgument>
            </InvokeMethod.TargetObject>
          </InvokeMethod>
        </If.Then>
      </If>
    </Sequence>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="As of August 2020, execution settings cannot be update via the endpoint PATCH /odata/Users, so a PUT request is done." DisplayName="Invoke MakeHTTPRequest Workflow (Update Robot Corresponding User)" sap:VirtualizedContainerService.HintSize="526,144" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Common\MakeHTTPRequest.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="io_Config">
          <mva:VisualBasicReference x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="in_Config" />
        </InOutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Method">
          <Literal x:TypeArguments="x:String">put</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Endpoint">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="String.Format(&quot;{0}/odata/Users({1})&quot;, in_Config(&quot;OrchestratorURL&quot;), in_RobotCorrespondingUserID)" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Body">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="UserCompleteData.ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int64" x:Key="in_OUID" />
        <InArgument x:TypeArguments="x:Int32" x:Key="in_ExpectedStatusCode">
          <Literal x:TypeArguments="x:Int32" Value="200" />
        </InArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="out_StatusCode" />
        <OutArgument x:TypeArguments="x:String" x:Key="out_Result" />
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>