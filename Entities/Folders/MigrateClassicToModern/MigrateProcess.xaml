<Activity mc:Ignorable="sap sap2010" x:Class="MigrateProcess" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_ClassicFolderProcess" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
    <x:Property Name="in_ClassicFolderData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_ModernFolderData" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1351.33333333333,854</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MigrateProcess_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Migrate a Process from the specified Classic Folder to the specified Modern Folder." DisplayName="Migrate Process" sap:VirtualizedContainerService.HintSize="398.666666666667,766.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="PackageFilePath" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message (Migrate Process)" sap:VirtualizedContainerService.HintSize="356.666666666667,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[String.Format(in_Config(&quot;MigrateProcess&quot;), in_ClassicFolderProcess(&quot;ProcessName&quot;).ToString)]" />
    <If Condition="[Not Directory.Exists(String.Format(&quot;{0}\{1}&quot;,  in_Config(&quot;EntitiesWorkbooksFolderPath&quot;), in_Config(&quot;PackageDownloadFolderPath&quot;)))]" DisplayName="If Package Download Folder Exists" sap:VirtualizedContainerService.HintSize="356.666666666667,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="334,85.3333333333333" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[String.Format(&quot;{0}\{1}&quot;,  in_Config(&quot;EntitiesWorkbooksFolderPath&quot;), in_Config(&quot;PackageDownloadFolderPath&quot;))]" />
      </If.Then>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DownloadPackageRequest Workflow" sap:VirtualizedContainerService.HintSize="356.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Entities\Packages\DownloadPackageRequest.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_DownloadFolderPath" xml:space="preserve">[String.Format("{0}\{1}",  in_Config("EntitiesWorkbooksFolderPath"), in_Config("PackageDownloadFolderPath"))]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Version">[in_ClassicFolderProcess("CurrentPackageVersion").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Name">[in_ClassicFolderProcess("PackageName").ToString]</InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_PackageFilePath">[PackageFilePath]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke VerifyPackageDependencies Workflow" sap:VirtualizedContainerService.HintSize="356.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Entities\Packages\VerifyPackageDependencies.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="in_DependenciesMinimumVersions">[Newtonsoft.Json.JsonConvert.DeserializeObject(Of Dictionary(Of String, String))(in_Config("PackagesMinimumDependenciesVersions"))]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PackageFilePath">[PackageFilePath]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:Delete ContinueOnError="True" DisplayName="Delete (Delete Local Temporary Package File)" sap:VirtualizedContainerService.HintSize="356.666666666667,22" sap2010:WorkflowViewState.IdRef="Delete_1" Path="[PackageFilePath]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CreateProcessRequest Workflow" sap:VirtualizedContainerService.HintSize="356.666666666667,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Entities\Processes\CreateProcessRequest.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int64" x:Key="in_OUFolderID">
          <mva:VisualBasicValue x:TypeArguments="x:Int64" ExpressionText="Convert.ToInt64(in_ModernFolderData.Rows(0)(&quot;ID&quot;))" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PackageName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ClassicFolderProcess(&quot;PackageName&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_PackageVersion">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ClassicFolderProcess(&quot;CurrentPackageVersion&quot;).ToString" />
        </InArgument>
        <InArgument x:TypeArguments="x:Int64" x:Key="in_EnvironmentID" />
        <InArgument x:TypeArguments="x:String" x:Key="in_EnvironmentName" />
        <InArgument x:TypeArguments="x:String" x:Key="in_ProcessName">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ClassicFolderProcess(&quot;ProcessName&quot;).ToString" />
        </InArgument>
        <OutArgument x:TypeArguments="x:Int64" x:Key="out_ProcessID" />
        <InArgument x:TypeArguments="x:String" x:Key="in_InputArgumentsDefinition">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_ClassicFolderProcess(&quot;InputArgumentsDefinition&quot;).ToString" />
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_ProcessName" />
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>