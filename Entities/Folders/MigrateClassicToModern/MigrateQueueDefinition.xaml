<Activity mc:Ignorable="sap sap2010" x:Class="MigrateQueueDefinition" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
    <x:Property Name="in_ClassicFolderQueue" Type="InArgument(sd:DataRow)" />
    <x:Property Name="in_ClassicFolderData" Type="InArgument(sd:DataTable)" />
    <x:Property Name="in_ModernFolderData" Type="InArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>640.666666666667,501.333333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>MigrateQueueDefinition_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="42">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="19">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Migrate Queue definition from Classic Folder to Modern Folder." DisplayName="Migrate Queue Definition" sap:VirtualizedContainerService.HintSize="376,436.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int64" Name="ModernQueueProcessID" />
      <Variable x:TypeArguments="x:Int64" Name="ModernQueueProcessScheduleID" />
      <Variable x:TypeArguments="x:Int64" Name="ModernQueueTriggerID" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message (Migrate Queue)" sap:VirtualizedContainerService.HintSize="334,94.6666666666667" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[String.Format(in_Config(&quot;MigrateQueue&quot;), in_ClassicFolderQueue(&quot;QueueName&quot;).ToString)]" />
    <If Condition="[Convert.ToInt64(in_ClassicFolderQueue(&quot;ProcessID&quot;)) = 0]" DisplayName="If Queue Process ID is Specified" sap:VirtualizedContainerService.HintSize="334,52.6666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Assign DisplayName="Assign ModernQueueProcessID" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int64">[ModernQueueProcessID]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int64">0</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke MigrateQueueDefinition_GetModernQueueProcessID Workflow" sap:VirtualizedContainerService.HintSize="379.333333333333,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Entities/Folders/MigrateClassicToModern/MigrateQueueDefinition_GetModernQueueProcessID.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="x:Int64" x:Key="in_ClassicProcessID">[Convert.ToInt64(in_ClassicFolderQueue("ProcessID"))]</InArgument>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_ClassicFolderData">[in_ClassicFolderData]</InArgument>
            <InArgument x:TypeArguments="sd:DataTable" x:Key="in_ModernFolderData">[in_ModernFolderData]</InArgument>
            <OutArgument x:TypeArguments="x:Int64" x:Key="out_ModernProcessID">[ModernQueueProcessID]</OutArgument>
            <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
            <InArgument x:TypeArguments="x:String" x:Key="in_QueueName">[in_ClassicFolderQueue("QueueName").ToString]</InArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CreateQueueRequest Workflow" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Entities\Queues\CreateQueueRequest.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Name">[in_ClassicFolderQueue("QueueName").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Description">[in_ClassicFolderQueue("Description").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_UniqueReference">[in_ClassicFolderQueue("UniqueReference").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_AutoRetry">[in_ClassicFolderQueue("AutoRetry").ToString]</InArgument>
        <InArgument x:TypeArguments="x:Int64" x:Key="in_OUFolderID">[Convert.ToInt64(in_ModernFolderData(0)("ID"))]</InArgument>
        <OutArgument x:TypeArguments="x:Int64" x:Key="out_QueueID" />
        <InArgument x:TypeArguments="x:Int32" x:Key="in_MaxNumberOfRetries">[Convert.ToInt32(in_ClassicFolderQueue("MaxNumberOfRetries"))]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_SpecificDataJsonSchema">[in_ClassicFolderQueue("SpecificDataJsonSchema").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OutputDataJsonSchema">[in_ClassicFolderQueue("OutputDataJsonSchema").ToString]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_AnalyticsDataJsonSchema">[in_ClassicFolderQueue("AnalyticsDataJsonSchema").ToString]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_SLAInMinutes">[Convert.ToInt32(in_ClassicFolderQueue("SLAInMinutes"))]</InArgument>
        <InArgument x:TypeArguments="x:Int32" x:Key="in_RiskSLAInMinutes">[Convert.ToInt32(in_ClassicFolderQueue("RiskSLAInMinutes"))]</InArgument>
        <InArgument x:TypeArguments="x:Int64" x:Key="in_ProcessID">[ModernQueueProcessID]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>