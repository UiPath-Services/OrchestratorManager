<Activity mc:Ignorable="sap sap2010" x:Class="GetAssetsData_ExtractData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_AssetData" Type="InArgument(njl:JToken)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
    <x:Property Name="in_AssetName" Type="InArgument(x:String)" />
    <x:Property Name="io_AssetsData" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_OUFolderID" Type="InArgument(x:Int64)" />
    <x:Property Name="in_OUFolderName" Type="InArgument(x:String)" />
    <x:Property Name="in_AssetID" Type="InArgument(x:Int64)" />
    <x:Property Name="in_Scope" Type="InArgument(x:String)" />
    <x:Property Name="in_Description" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1000,2738.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetAssetsData_GetValues_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="21">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Extract data about an Asset retrieved via API.&#xA;&#xA;This workflow supports JToken representing global Assets, Assets per Robot and Assets per User.&#xA;However, since JTokens representing Assets per Robot or per User do not have fields for Name and ID of Asset, such data is passed via the arguments in_AssetName and in_AssetID. The same applies to in_OUFolderID and in_OUFolderName.&#xA;&#xA;In the case of credential Assets, there are two values: Username (returned as parameter Value) and Password (returned as parameter Password)." DisplayName="Get Assets Data - Extract Data" sap:VirtualizedContainerService.HintSize="652.666666666667,2674" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataRow" Name="NewAssetRow" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign NewAssetRow (Initialization)" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataRow">[NewAssetRow]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataRow">[io_AssetsData.NewRow()]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign OU/Folder ID" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("OUFolderID")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_OUFolderID]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign OU/Folder Name" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("OUFolderName")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_OUFolderName]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Asset ID" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("AssetID")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_AssetID]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Asset Name" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("AssetName")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_AssetName]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Description" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_17">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Description")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_Description]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Type" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Type")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_AssetData("ValueType")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign Scope" sap:VirtualizedContainerService.HintSize="610.666666666667,62" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Scope")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Object">[in_Scope]</InArgument>
      </Assign.Value>
    </Assign>
    <Switch x:TypeArguments="x:String" DisplayName="Switch Scope" Expression="[in_Scope.ToLowerInvariant]" sap:VirtualizedContainerService.HintSize="610.666666666667,192" sap2010:WorkflowViewState.IdRef="Switch`1_1">
      <Switch.Default>
        <Throw DisplayName="Throw (Invalid Asset Scope - Determine Scope)" Exception="[New Exception(in_Config(&quot;InvalidAssetScope&quot;))]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
      </Switch.Default>
      <Sequence x:Key="robot" DisplayName="Get Robot Data" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign RobotID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_12">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[NewAssetRow("RobotUserID")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[in_AssetData("RobotId")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign RobotName" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[NewAssetRow("RobotUserName")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[in_AssetData("RobotName")]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <Sequence x:Key="user" DisplayName="Get User Data" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <Assign DisplayName="Assign UserID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_14">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[NewAssetRow("RobotUserID")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[in_AssetData("UserId")]</InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign Username" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_15">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[NewAssetRow("RobotUserName")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[in_AssetData("UserName")]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <ui:Comment x:Key="global" sap:VirtualizedContainerService.HintSize="334,74.6666666666667" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Global Assets do not have User/Robot ID or User/Robot Name fields" />
    </Switch>
    <If Condition="[in_AssetData(&quot;ValueType&quot;).ToString.ToLowerInvariant = &quot;credential&quot;]" DisplayName="If Credential Asset" sap:VirtualizedContainerService.HintSize="611,484" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Get Username and Initialize Password" sap:VirtualizedContainerService.HintSize="304,336" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap2010:Annotation.AnnotationText="Passwords cannot be retrieved via Orchestrator API requests." DisplayName="Assign Asset Value (Credential Username)" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Value")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[in_AssetData("CredentialUsername").ToString]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
          <Assign sap2010:Annotation.AnnotationText="The password of a credential Asset can be retrieved via the Get Credential activity." DisplayName="Assign Password (Initialization)" sap:VirtualizedContainerService.HintSize="262,102" sap2010:WorkflowViewState.IdRef="Assign_16">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Password")]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Object">[String.Empty]</InArgument>
            </Assign.Value>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign Asset Value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Value")]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Object">[in_AssetData("Value").ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <If sap2010:Annotation.AnnotationText="Passwords cannot be retrieved via Orchestrator API, but it is possible to retrieve them using the connection of the robot executing this workflow via the Get Credential activity.&#xA;This option can be enabled by the argument GetCredentialAssetsViaRobot in the configuration file (Config.xlsx).&#xA;The robot must have enough permissions to get Assets.&#xA;A Robot in a Classic Folder can only access Assets in its own Folder. To access Assets in multiple Folders, it is necessary to use a Robot that belongs to a Modern Folder.&#xA;It is not possible to get passwords of Assets per Robot and Assets per User." Condition="[Convert.ToBoolean(in_Config(&quot;GetCredentialAssetsViaRobot&quot;).ToString) AndAlso in_Scope.ToLowerInvariant = &quot;global&quot; AndAlso in_AssetData(&quot;ValueType&quot;).ToString.ToLowerInvariant = &quot;credential&quot;]" DisplayName="If Should Retrieve Credentials via Robot Connection" sap:VirtualizedContainerService.HintSize="611,786" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <TryCatch DisplayName="Try Catch (Get Credential Asset)" sap:VirtualizedContainerService.HintSize="438,506" sap2010:WorkflowViewState.IdRef="TryCatch_1">
          <TryCatch.Try>
            <Sequence DisplayName="Try to Get Credential Asset" sap:VirtualizedContainerService.HintSize="376,279" sap2010:WorkflowViewState.IdRef="Sequence_3">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="Password" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetCredentialAsset Workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Entities\Assets\GetCredentialAsset.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_AssetName">[in_AssetName]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_OUFolderName">[in_OUFolderName]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_Username" />
                  <OutArgument x:TypeArguments="x:String" x:Key="out_Password">[Password]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Assign Password" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[NewAssetRow("Password")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[Password]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </TryCatch.Try>
          <TryCatch.Catches>
            <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ActivityAction x:TypeArguments="s:Exception">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="s:Exception" Name="Exception" />
                </ActivityAction.Argument>
                <ui:LogMessage DisplayName="Log Message (Get Credential Failed)" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Warn" Message="[String.Format(in_Config(&quot;FailedToGetCredentialAsset&quot;), in_AssetName)]" />
              </ActivityAction>
            </Catch>
          </TryCatch.Catches>
        </TryCatch>
      </If.Then>
    </If>
    <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[NewAssetRow]" DataTable="[io_AssetsData]" DisplayName="Add Data Row (Asset)" sap:VirtualizedContainerService.HintSize="611,22" sap2010:WorkflowViewState.IdRef="AddDataRow_1" />
  </Sequence>
</Activity>