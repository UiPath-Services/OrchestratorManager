<Activity mc:Ignorable="sads sap sap2010" x:Class="GetAssets"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:s1="clr-namespace:System;assembly=mscorlib"
 xmlns:s2="clr-namespace:System;assembly=System"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sa1="clr-namespace:System.Activities;assembly=System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sae="clr-namespace:System.Activities.Expressions;assembly=System.Activities"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sas="clr-namespace:System.Activities.Statements;assembly=System.Activities"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sc1="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sd1="clr-namespace:System.Data;assembly=System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd3="clr-namespace:System.Diagnostics;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd4="clr-namespace:System.Drawing;assembly=System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:this="clr-namespace:"
 xmlns:uc="clr-namespace:UiPath.Core;assembly=UiPath.System.Activities"
 xmlns:uca="clr-namespace:UiPath.Core.Activities;assembly=UiPath.System.Activities"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OpenedWorkbook" Type="InArgument(ui:WorkbookApplication)" />
    <x:Property Name="in_AssetListSheetName" Type="InArgument(x:String)" />
    <x:Property Name="in_OrchestratorURL" Type="InArgument(x:String)" />
    <x:Property Name="in_Token" Type="InArgument(x:String)" />
  </x:Members>
  <this:GetAssets.in_OpenedWorkbook>
    <InArgument x:TypeArguments="ui:WorkbookApplication" />
  </this:GetAssets.in_OpenedWorkbook>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces for internal implementation</mva:VisualBasic.Settings>
  <TextExpression.NamespacesForImplementation>
    <scg1:List x:TypeArguments="x:String" Capacity="16">
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities</x:String>
      <x:String>Newtonsoft.Json.Serialization</x:String>
      <x:String>Newtonsoft.Json.Converters</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg1:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg1:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </scg1:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Retrieve details about assets defined in Orchestrator.&#xA;&#xA;Required permissions:&#xA;- Asset: Edit, View" DisplayName="Get Assets" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="AssetsDetails" />
      <Variable x:TypeArguments="scg1:Dictionary(x:String, x:String)" Name="FoldersNamesIds" />
      <Variable x:TypeArguments="x:String" Name="FolderName" />
      <Variable x:TypeArguments="s1:String[]" Name="SelectedFolders" />
    </Sequence.Variables>
    <ui:BuildDataTable DataTable="[AssetsDetails]" DisplayName="Build Data Table (Assets Details)" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Type&quot; minOccurs=&quot;0&quot;&gt;&#xA;                  &lt;xs:simpleType&gt;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xA;                    &lt;/xs:restriction&gt;&#xA;                  &lt;/xs:simpleType&gt;&#xA;                &lt;/xs:element&gt;&#xA;                &lt;xs:element name=&quot;Value&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Folder_x0020_Id&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Folder_x0020_Path&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Asset_x0020_Id&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Common\GetFolders.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Token">[in_Token]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorURL">[in_OrchestratorURL]</InArgument>
        <OutArgument x:TypeArguments="scg1:Dictionary(x:String, x:String)" x:Key="out_FoldersNamesIds">[FoldersNamesIds]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InputDialog DisplayName="Input Dialog" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="Select an Orchestrator folder." Options="[Enumerable.Concat({&quot;All&quot;},FoldersNamesIds.Keys).ToArray]" Title="Folder">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <If sap2010:Annotation.AnnotationText="A folder named &quot;All&quot; is not supported." Condition="[FolderName = &quot;All&quot;]" DisplayName="If Should Retrieve Assets From All Folders" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Assign DisplayName="Assign SelectedFolders (All Folders)" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="s1:String[]">[SelectedFolders]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s1:String[]">[FoldersNamesIds.Keys.ToArray]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign SelectedFolders (Single Selected Folder)" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="s1:String[]">[SelectedFolders]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s1:String[]">[{FolderName}]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Folder" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[SelectedFolders]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="FolderName" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
              <Variable x:TypeArguments="x:String" Name="Result" />
            </Sequence.Variables>
            <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request (Get Assets)" EndPoint="[in_OrchestratorURL+&quot;/odata/Assets&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[Result]" StatusCode="[StatusCode]" TimeoutMS="6000">
              <ui:HttpClient.Attachments>
                <scg1:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg1:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + in_Token]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="X-UIPATH-OrganizationUnitId">[FoldersNamesIds(FolderName).ToString]</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg1:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg1:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <If Condition="[StatusCode = 200]" DisplayName="If Get Request Was Successful" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Sequence DisplayName="Write Assets Details" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="njl:JObject" Name="ResultObject" />
                  </Sequence.Variables>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON (Get Assets Response)" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[ResultObject]" JsonString="[Result]" />
                  <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Populate table of asset for bulk writing to file." DisplayName="For Each Retrieved Asset" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[ResultObject.SelectToken(&quot;value&quot;).Children]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="njl:JObject">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="njl:JObject" Name="AssetDetails" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="NewAssetRow" />
                          </Sequence.Variables>
                          <Assign DisplayName="Assign NewAssetRow (Initialization)" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[NewAssetRow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[AssetsDetails.NewRow()]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:MultipleAssign DisplayName="Multiple Assign (Common Response Fields)" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                            <ui:MultipleAssign.AssignOperations>
                              <scg1:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewAssetRow(0)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[AssetDetails("Name").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewAssetRow(1)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[AssetDetails("ValueType").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewAssetRow(3)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[FoldersNamesIds(FolderName)]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewAssetRow(4)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[FolderName]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewAssetRow(5)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[AssetDetails("Id").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg1:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                          <If sap2010:Annotation.AnnotationText="Returns empty string if asset is of credential type, since credentials cannot be retrieved via API." Condition="[AssetDetails(&quot;ValueType&quot;).ToString.ToLowerInvariant = &quot;credential&quot;]" DisplayName="If Credential Asset" sap2010:WorkflowViewState.IdRef="If_7">
                            <If.Then>
                              <Assign sap2010:Annotation.AnnotationText="Credential assets cannot be retrieved via API requests." DisplayName="Assign Asset Value (Credential)" sap2010:WorkflowViewState.IdRef="Assign_3">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[NewAssetRow(2)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[String.Empty]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Then>
                            <If.Else>
                              <Assign DisplayName="Assign Asset Value" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[NewAssetRow(2)]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">[AssetDetails("Value").ToString]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </If.Else>
                          </If>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[NewAssetRow]" DataTable="[AssetsDetails]" DisplayName="Add Data Row (Retrieved Asset)" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message (Get Assets Failure)" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Error" Message="[String.Format(&quot;Failed to get assets. Server details: Status: {0} / Response: {1}&quot;, StatusCode, Result)]" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" sap2010:Annotation.AnnotationText="Clear previously written asset data and write data about new assets." CreateNewFile="False" DisplayName="Excel Application Scope" ExistingWorkbook="[in_OpenedWorkbook]" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Visible="False">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="PreviousAssets" />
            </Sequence.Variables>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[PreviousAssets]" DisplayName="Read Range (Previously Listed Assets)" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[in_AssetListSheetName]">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Math.Max() prevents clearing the header of the table." Cell="[&quot;A2:Z&quot;+Math.Max(1+PreviousAssets.Rows.Count, 2).ToString]" DisplayName="Write Cell (Clear Previously Listed Assets)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[in_AssetListSheetName]">
              <ui:ExcelWriteCell.Text>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelWriteCell.Text>
            </ui:ExcelWriteCell>
            <ui:ExcelWriteRange AddHeaders="False" DataTable="[AssetsDetails]" DisplayName="Write Range (Assets Details)" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[in_AssetListSheetName]" StartingCell="A2" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <sads:DebugSymbol.Symbol>d0pDOlxVc2Vyc1xtYXRldXNcRG9jdW1lbnRzXEdpdEh1YlxPcmNoZXN0cmF0b3JNYW5hZ2VyXEFzc2V0c1xHZXRBc3NldHMueGFtbFpXA6gCDgIBAV4FXpEQAwGFAV8FZR0CAX1mBWoWAgF2awWAAQoCAWmBAQWJAhICARiKAgWmAiACAQJeIl4zAwGGAWNoY3kDAYMBYktiXwMBgQFhQWFLAgF/X7cBX88BAgF+ZnlmmQECAXxmogFm5wECAXpoMWg9AgF4Zu4BZvYBAgF3a2hriAECAWptCXQSAgFxdwl+EgIBbIEBlwGBAaoBAgFnhwELhgIWAgEZigKBAooClgICARaQAgujAhYCAQNyN3JVAgF0bzhvSQIBcnw3fEUCAW95OHlJAgFtjAENnQEdAgFYngENhQISAgEalAINmgIhAgEQmwINoQIhAgEKogINogLnAQIBBIwBiAOMAZMDAgFmjAHoBIwB7gQCAWWUAU6UAWQCAWOMAbkEjAHDBAIBYYwBxQOMAfUDAgFfjAHiAowB7QICAV6MAc8EjAHdBAIBXJUBXJUBggECAVmeARueAS8CARugARGAAhwCASKDAhGDAosCAgEdlAI8lAJOAgEUlwITlwJCAgETlALAAZQC2QECARGbAn+bAsUBAgEOngITngJCAgENmwK9ApsC1gICAQuiAuABogLkAQIBCaICPqICTwIBB6ICuQGiAtIBAgEFpAETpAHkAQIBU6UBE/8BIAIBI4MClAGDAogCAgEfgwKEAYMCiwECAR6kAdcBpAHhAQIBVqQBuwGkAcsBAgFUpQGHAqUBvwICAVGrARn8ASQCASSvARu2ASQCAUy3ARvkAS8CATblARv6ASACASr7ARv7AdABAgEltAFItAFgAgFPsQFJsQFWAgFNvwFMvwFrAgFKvAFNvAFdAgFIxwFMxwFwAgFGxAFNxAFdAgFEzwFMzwFpAgFBzAFNzAFdAgE/1wFM1wFYAgE91AFN1AFdAgE73wFM3wFpAgE53AFN3AFdAgE35QGxAeUBiwICASvnAR/uASgCATLxAR/4ASgCAS37AUb7AVUCASj7AWD7AXECASbsAUrsAVgCATXpAUvpAVsCATP2AUr2AWoCATDzAUvzAVsCAS66ASHBATYDATYawgEhyQE2AwE2FcoBIdEBNgMBNhDSASHZATYDATYL2gEh4QE2AwE2Bg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="832,59" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="832,87" />
      <sap2010:ViewStateData Id="InputDialog_1" sap:VirtualizedContainerService.HintSize="832,92" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="832,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_1" sap:VirtualizedContainerService.HintSize="794,22" />
      <sap2010:ViewStateData Id="DeserializeJson`1_6" sap:VirtualizedContainerService.HintSize="547,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="509,60" />
      <sap2010:ViewStateData Id="MultipleAssign_1" sap:VirtualizedContainerService.HintSize="509,222">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="509,292">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_2" sap:VirtualizedContainerService.HintSize="509,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="531,840">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="547,1001">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="569,1225">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="794,1373">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="816,1559">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="832,1693" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="314,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,479">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="832,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="854,2670">
        <sap:WorkflowViewStateService.ViewState>
          <scg1:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg1:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ActivityBuilder_1" sap:VirtualizedContainerService.HintSize="894,2750" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>