<Activity mc:Ignorable="sads sap sap2010" x:Class="GetRobots"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=Microsoft.VisualBasic, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:s1="clr-namespace:System;assembly=mscorlib"
 xmlns:s2="clr-namespace:System;assembly=System"
 xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities"
 xmlns:sa1="clr-namespace:System.Activities;assembly=System.Activities, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sae="clr-namespace:System.Activities.Expressions;assembly=System.Activities"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sas="clr-namespace:System.Activities.Statements;assembly=System.Activities"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sc1="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:sd1="clr-namespace:System.Data;assembly=System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd3="clr-namespace:System.Diagnostics;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sd4="clr-namespace:System.Drawing;assembly=System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
 xmlns:si="clr-namespace:System.IO;assembly=mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sl="clr-namespace:System.Linq;assembly=System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sx="clr-namespace:System.Xml;assembly=System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
 xmlns:this="clr-namespace:"
 xmlns:uc="clr-namespace:UiPath.Core;assembly=UiPath.System.Activities"
 xmlns:uca="clr-namespace:UiPath.Core.Activities;assembly=UiPath.System.Activities"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_OpenedWorkbook" Type="InArgument(ui:WorkbookApplication)" />
    <x:Property Name="in_OrchestratorURL" Type="InArgument(x:String)" />
    <x:Property Name="in_Token" Type="InArgument(x:String)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, ui:GenericValue))" />
  </x:Members>
  <this:GetRobots.in_OpenedWorkbook>
    <InArgument x:TypeArguments="ui:WorkbookApplication" />
  </this:GetRobots.in_OpenedWorkbook>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces for internal implementation</mva:VisualBasic.Settings>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="32">
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Activities</x:String>
      <x:String>Newtonsoft.Json.Serialization</x:String>
      <x:String>Newtonsoft.Json.Converters</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.IO</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Net</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="28">
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Retrieve details about robots defined in Orchestrator.&#xA;&#xA;Required permissions:&#xA;- Robot: Edit, View" DisplayName="Get Robots" sap2010:WorkflowViewState.IdRef="Sequence_14">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="RobotsDetails" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="FoldersNamesIds" />
      <Variable x:TypeArguments="x:String" Name="FolderName" />
      <Variable x:TypeArguments="s1:String[]" Name="SelectedFolders" />
    </Sequence.Variables>
    <ui:BuildDataTable DataTable="[RobotsDetails]" DisplayName="Build Data Table (Robots Details)" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xD;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xD;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xD;&#xA;      &lt;xs:complexType&gt;&#xD;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xD;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xD;&#xA;            &lt;xs:complexType&gt;&#xD;&#xA;              &lt;xs:sequence&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Hosting_x0020_Type&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Machine_x0020_Id&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Machine_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Username&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Type&quot; minOccurs=&quot;0&quot;&gt;&#xD;&#xA;                  &lt;xs:simpleType&gt;&#xD;&#xA;                    &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xD;&#xA;                      &lt;xs:maxLength value=&quot;100&quot; /&gt;&#xD;&#xA;                    &lt;/xs:restriction&gt;&#xD;&#xA;                  &lt;/xs:simpleType&gt;&#xD;&#xA;                &lt;/xs:element&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Environments&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;OU_x0020_Id&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;OU_x0020_Name&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;                &lt;xs:element name=&quot;Robot_x0020_Id&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xD;&#xA;              &lt;/xs:sequence&gt;&#xD;&#xA;            &lt;/xs:complexType&gt;&#xD;&#xA;          &lt;/xs:element&gt;&#xD;&#xA;        &lt;/xs:choice&gt;&#xD;&#xA;      &lt;/xs:complexType&gt;&#xD;&#xA;    &lt;/xs:element&gt;&#xD;&#xA;  &lt;/xs:schema&gt;&#xD;&#xA;&lt;/NewDataSet&gt;" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetFolders workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Common\GetFolders.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_Token">[in_Token]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_OrchestratorURL">[in_OrchestratorURL]</InArgument>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="in_Config">[in_Config]</InArgument>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="out_FoldersNamesIds">[FoldersNamesIds]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InputDialog DisplayName="Input Dialog" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="[in_Config(&quot;ChooseFolderMessage&quot;)]" Options="[Enumerable.Concat({&quot;All&quot;},FoldersNamesIds.Keys).ToArray]" Title="[in_Config(&quot;ChooseFolderTitle&quot;)]">
      <ui:InputDialog.Result>
        <OutArgument x:TypeArguments="x:String">[FolderName]</OutArgument>
      </ui:InputDialog.Result>
    </ui:InputDialog>
    <If sap2010:Annotation.AnnotationText="A folder named &quot;All&quot; is not supported." Condition="[FolderName = &quot;All&quot;]" DisplayName="If Should Retrieve Robots From All Folders" sap2010:WorkflowViewState.IdRef="If_8">
      <If.Then>
        <Assign DisplayName="Assign SelectedFolders (All Folders)" sap2010:WorkflowViewState.IdRef="Assign_5">
          <Assign.To>
            <OutArgument x:TypeArguments="s1:String[]">[SelectedFolders]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s1:String[]">[FoldersNamesIds.Keys.ToArray]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="Assign SelectedFolders (Single Selected Folder)" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="s1:String[]">[SelectedFolders]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s1:String[]">[{FolderName}]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each Folder" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[SelectedFolders]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="FolderName" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_20">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
              <Variable x:TypeArguments="x:String" Name="Result" />
            </Sequence.Variables>
            <ui:HttpClient Body="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseHeaders="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" BodyFormat="application/json" ClientCertificate="[Nothing]" ClientCertificatePassword="[Nothing]" DisplayName="HTTP Request (Get Robots)" EndPoint="[in_OrchestratorURL+&quot;/odata/Robots&quot;]" sap2010:WorkflowViewState.IdRef="HttpClient_1" Method="GET" Result="[Result]" StatusCode="[StatusCode]" TimeoutMS="6000">
              <ui:HttpClient.Attachments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Attachments>
              <ui:HttpClient.Cookies>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Cookies>
              <ui:HttpClient.Headers>
                <InArgument x:TypeArguments="x:String" x:Key="Authorization">["Bearer " + in_Token]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="X-UIPATH-OrganizationUnitId">[FoldersNamesIds(FolderName).ToString]</InArgument>
              </ui:HttpClient.Headers>
              <ui:HttpClient.Parameters>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.Parameters>
              <ui:HttpClient.UrlSegments>
                <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
              </ui:HttpClient.UrlSegments>
            </ui:HttpClient>
            <If Condition="[StatusCode = 200]" DisplayName="If Get Request Was Successful" sap2010:WorkflowViewState.IdRef="If_6">
              <If.Then>
                <Sequence DisplayName="Write Robots Details" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="njl:JObject" Name="ResultObject" />
                  </Sequence.Variables>
                  <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize JSON (Get Robots Response)" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_6" JsonObject="[ResultObject]" JsonString="[Result]" />
                  <ui:ForEach x:TypeArguments="njl:JObject" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Populate table of robot for bulk writing to file." DisplayName="For Each Retrieved Robot" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[ResultObject.SelectToken(&quot;value&quot;).Children]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="njl:JObject">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="njl:JObject" Name="RobotDetails" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="NewRobotRow" />
                          </Sequence.Variables>
                          <Assign DisplayName="Assign NewAssetRow (Initialization)" sap2010:WorkflowViewState.IdRef="Assign_2">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[NewRobotRow]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[RobotsDetails.NewRow()]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:MultipleAssign DisplayName="Multiple Assign (Common Response Fields)" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                            <ui:MultipleAssign.AssignOperations>
                              <scg:List x:TypeArguments="ui:AssignOperation" Capacity="16">
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(0)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("HostingType")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(1)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("Name")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(2)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("MachineId")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation>
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(3)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("MachineName")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation>
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(4)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("Username")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(5)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("Type")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(6)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("RobotEnvironments")]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation>
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(7)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[FoldersNamesIds(FolderName)]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation>
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(8)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[FolderName]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                                <ui:AssignOperation>
                                  <ui:AssignOperation.To>
                                    <OutArgument x:TypeArguments="x:Object">[NewRobotRow(9)]</OutArgument>
                                  </ui:AssignOperation.To>
                                  <ui:AssignOperation.Value>
                                    <InArgument x:TypeArguments="x:Object">[RobotDetails("Id").ToString]</InArgument>
                                  </ui:AssignOperation.Value>
                                </ui:AssignOperation>
                              </scg:List>
                            </ui:MultipleAssign.AssignOperations>
                          </ui:MultipleAssign>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[NewRobotRow]" DataTable="[RobotsDetails]" DisplayName="Add Data Row (Retrieved Robot)" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw DisplayName="Throw (Get Robots Failure)" Exception="[New System.Net.WebException(String.Format(in_Config(&quot;GetRobotsFailure&quot;), StatusCode, Result))]" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" sap2010:Annotation.AnnotationText="Clear previously written robot data and write new data about robots." CreateNewFile="False" DisplayName="Excel Application Scope" ExistingWorkbook="[in_OpenedWorkbook]" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_2" Visible="False">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_19">
            <Sequence.Variables>
              <Variable x:TypeArguments="sd:DataTable" Name="PreviousRobots" />
            </Sequence.Variables>
            <ui:ExcelReadRange AddHeaders="True" DataTable="[PreviousRobots]" DisplayName="Read Range (Previously Listed Robots)" sap2010:WorkflowViewState.IdRef="ExcelReadRange_2" SheetName="[in_Config(&quot;GetOperationName&quot;)]">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ExcelWriteCell sap2010:Annotation.AnnotationText="Math.Max() prevents clearing the header of the table." Cell="[&quot;A2:Z&quot;+Math.Max(1+PreviousRobots.Rows.Count, 2).ToString]" DisplayName="Write Cell (Clear Previously Listed Robots)" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[in_Config(&quot;GetOperationName&quot;)]">
              <ui:ExcelWriteCell.Text>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelWriteCell.Text>
            </ui:ExcelWriteCell>
            <ui:ExcelWriteRange AddHeaders="False" DataTable="[RobotsDetails]" DisplayName="Write Range (Robots Details)" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[in_Config(&quot;GetOperationName&quot;)]" StartingCell="A2" />
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <sads:DebugSymbol.Symbol>d0pDOlxVc2Vyc1xtYXRldXNcRG9jdW1lbnRzXEdpdEh1YlxPcmNoZXN0cmF0b3JNYW5hZ2VyXFJvYm90c1xHZXRSb2JvdHMueGFtbGFbA78CDgIBAWIFYp8VAwGRAWMFah0DAYcBawVvFgIBfnAFhQEKAgFxhgEFoAISAgEYoQIFvQIgAgECYiJiMwMBkgFoZ2h4AwGPAWZLZl8DAY0BZ2NnbgMBiwFlQWVLAwGJAWO3AWPPAQMBiAFreWunAQMBhQFrsAFr9QEDAYMBbTFtPQMBgQFr/AFrqAICAX9waHCIAQIBcnIJeRICAXl8CYMBEgIBdIYBlwGGAaoBAgFvjAELnQIWAgEZoQKBAqEClgICARanAgu6AhYCAQN3N3dVAgF8dDh0SQIBeoEBN4EBRQIBd344fkkCAXWRAQ2iAR0CAWCjAQ2cAhICARqrAg2xAiECARCyAg24AiECAQq5Ag25AvkBAgEEkQGIA5EBkwMCAW6RAegEkQHuBAIBbZkBTpkBZAIBa5EBuQSRAcMEAgFpkQHFA5EB9QMCAWeRAeICkQHtAgIBZpEBzwSRAd0EAgFkmgFcmgGCAQIBYaMBG6MBLwIBG6UBEZcCHAIBIpoCEZoC4wECAR2rAjyrAk4CARSuAhOuAkICAROrAsABqwLrAQIBEbICf7ICxQECAQ61AhO1AkICAQ2yAr0CsgLoAgIBC7kC8gG5AvYBAgEJuQI+uQJPAgEHuQK5AbkC5AECAQWpAROpAeQBAgFbqgETlgIgAgEjmgJLmgK2AQIBHqkB1wGpAeEBAgFeqQG7AakBywECAVyqAYcCqgG/AgIBWbABGZMCJAIBJLQBG7sBJAIBVLwBG5ECLwIBKpICG5IC0AECASW5AUi5AWACAVe2AUm2AVYCAVXEAUzEAWkCAVLBAU3BAV0CAVDMAUzMAWICAU7JAU3JAV0CAUzUAUzUAWcCAUrRAU3RAV0CAUjcAUzcAWkCAUbZAU3ZAV0CAUTkAUzkAWYCAULhAU3hAV0CAUDsAUzsAWICAT7pAU3pAV0CATz0AUz0AW8CATrxAU3xAV0CATj8AUz8AWkCATX5AU35AV0CATOEAkyEAlgCATGBAk2BAl0CAS+MAkyMAmkCAS2JAk2JAl0CASuSAkaSAlUCASiSAmCSAnECASa/ASHGATYDASozxwEhzgE2AwEqLs8BIdYBNgMBKinXASHeATYDASok3wEh5gE2AwEqH+cBIe4BNgMBKhrvASH2ATYDASoV9wEh/gE2AwEqEP8BIYYCNgMBKguHAiGOAjYDASoG</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="BuildDataTable_1" sap:VirtualizedContainerService.HintSize="641,59" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_1" sap:VirtualizedContainerService.HintSize="641,87" />
      <sap2010:ViewStateData Id="InputDialog_1" sap:VirtualizedContainerService.HintSize="641,92" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="641,235">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpClient_1" sap:VirtualizedContainerService.HintSize="603,22" />
      <sap2010:ViewStateData Id="DeserializeJson`1_6" sap:VirtualizedContainerService.HintSize="356,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="318,60" />
      <sap2010:ViewStateData Id="MultipleAssign_1" sap:VirtualizedContainerService.HintSize="318,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddDataRow_2" sap:VirtualizedContainerService.HintSize="318,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="340,663">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_3" sap:VirtualizedContainerService.HintSize="356,824">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="378,1048">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="603,1196">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="625,1382">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="641,1516" />
      <sap2010:ViewStateData Id="ExcelReadRange_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="314,129">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="336,479">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_2" sap:VirtualizedContainerService.HintSize="641,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="663,2493">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ActivityBuilder_1" sap:VirtualizedContainerService.HintSize="703,2573" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>